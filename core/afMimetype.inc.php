<?php



class afMimetype {


	////////////////////////////////////////////////////////////////////////////
	// CONTRUCTOR - PASS IN A FILE EXTENSION OR MIME TIME ID
	////////////////////////////////////////////////////////////////////////////
	public function __construct($type) {
		global $db;

		if (is_numeric($type)) $type = (int) $type;

		if (!array_key_exists($type, self::$cache)) {
			self::$cache[$type] = $db->cache(AF_DAY)->rowId(
				'pudl_mimetype',
				is_int($type) ? 'mime_id' : 'mime_ext',
				$type
			);
		}

		$this->type	= is_array(self::$cache[$type])
					? self::$cache[$type]
					: $type;
	}




	////////////////////////////////////////////////////////////////////////////
	// GET THE MIME TYPE / CONTENT TYPE
	////////////////////////////////////////////////////////////////////////////
	public function __toString() {
		if (is_string($this->type)) return 'application/'.$this->type;
		if (!is_array($this->type)) return self::unknown;
		return (string) $this->type['mime_type'];
	}




	////////////////////////////////////////////////////////////////////////////
	// GET THE MIME TYPE / CONTENT TYPE
	////////////////////////////////////////////////////////////////////////////
	public function type() {
		return (string) $this;
	}




	////////////////////////////////////////////////////////////////////////////
	// GET THE DATABASE ID
	////////////////////////////////////////////////////////////////////////////
	public function id() {
		if (is_string($this->type)) return NULL;
		if (!is_array($this->type)) return NULL;
		return (int) $this->type['mime_id'];
	}




	////////////////////////////////////////////////////////////////////////////
	// GET THE CONVERTED FILE EXTENSION
	////////////////////////////////////////////////////////////////////////////
	public function ext() {
		if (is_string($this->type)) return $this->type;
		if (!is_array($this->type)) return NULL;

		return empty($this->type['af_ext'])
				? $this->type['mime_ext']
				: $this->type['af_ext'];
	}




	////////////////////////////////////////////////////////////////////////////
	// PRIVATE LOCAL VARIABLES
	////////////////////////////////////////////////////////////////////////////
	private $type = NULL;




	////////////////////////////////////////////////////////////////////////////
	// PRIVATE STATIC VARIABLES
	////////////////////////////////////////////////////////////////////////////
	private static $cache = [];




	////////////////////////////////////////////////////////////////////////////
	// LOCAL CONSTANTS
	////////////////////////////////////////////////////////////////////////////
	const unknown = 'application/octet-stream';

}
