<?php


namespace af;




////////////////////////////////////////////////////////////////////////////////
// HANDLE PREFERENCES FOR A GIVEN USER
////////////////////////////////////////////////////////////////////////////////
trait preference {




	////////////////////////////////////////////////////////////////////////////
	// DECODE A JSON STRING
	////////////////////////////////////////////////////////////////////////////
	public static function parsePreferences($data) {
		if (empty($data)) return [];
		return @json_decode($data, true, 512, JSON_BIGINT_AS_STRING);
	}




	////////////////////////////////////////////////////////////////////////////
	// GET PREFERENCES LIST
	////////////////////////////////////////////////////////////////////////////
	public function getPreferences() {
		if (!empty($this->preferences)) {
			return $this->preferences;
		}

		if (!empty($this->preference)) {
			return $this->preferences = $this->parsePreferences($this->preference);
		}

		return $this->preferences = $this->parsePreferences(
			$this->pudl()->cellId('user_preference', 'preference', 'user_id', $this)
		);
	}




	////////////////////////////////////////////////////////////////////////////
	// GET A SINGLE PREFERENCE
	////////////////////////////////////////////////////////////////////////////
	public function getPreference($name, $default=false) {
		$prefs = $this->getPreferences();
		return isset($prefs[$name]) ? $prefs[$name] : $default;
	}




	////////////////////////////////////////////////////////////////////////////
	// CHECK IF A SINGLE PREFERENCE EXISTS
	////////////////////////////////////////////////////////////////////////////
	public function hasPreference($name) {
		$prefs = $this->getPreferences();
		return isset($prefs[$name]);
	}




	////////////////////////////////////////////////////////////////////////////
	// SET PREFERENCES LIST
	////////////////////////////////////////////////////////////////////////////
	public function setPreferences($preferences) {
		$this->preferences		= $preferences;
		$this->preference	= json_encode($preferences);

		return $this->pudl()->upsert('user_preference', [
			'user_id'		=> $this->id(),
			'preference'	=> $this->preference,
		]);
	}




	////////////////////////////////////////////////////////////////////////////
	// SET A SINGLE PREFERENCE
	////////////////////////////////////////////////////////////////////////////
	public function setPreference($key, $value) {
		$preferences		= $this->getPreferences();
		$preferences[$key]	= $value;
		return $this->setPreferences($preferences);
	}




	////////////////////////////////////////////////////////////////////////////
	// SET A SINGLE PREFERENCE (ALIAS, DEPRECATED)
	////////////////////////////////////////////////////////////////////////////
	public function updatePreference($key, $value) {
		return $this->setPreference($key, $value);
	}




	////////////////////////////////////////////////////////////////////////////
	// MEMBER VARIABLES
	////////////////////////////////////////////////////////////////////////////
	protected	$preference		= [];
	protected	$preferences	= [];

}

