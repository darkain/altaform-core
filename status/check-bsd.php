<?php


////////////////////////////////////////////////////////////////////////////////
// PARSE OUT THE TIME INFORMATION AND RETURN IT AS NUMBER OF SECONDS
////////////////////////////////////////////////////////////////////////////////
function parse_etime($etime) {
	$m = [];
	preg_match("/^(([\d]+)-)?(([\d]+):)?([\d]+):([\d]+)$/", trim($etime), $m);
	return
		((int)$m[2]) * 86400 +	// DAYS
		((int)$m[4]) * 3600 +	// HOURS
		((int)$m[5]) * 60 +		// MINUTES
		((int)$m[6]);			// SECONDS
}




////////////////////////////////////////////////////////////////////////////////
// PREP THE OUTPUT CONTENT
////////////////////////////////////////////////////////////////////////////////
$output = [
	'type'		=> 'NGINX',
	'version'	=> $_SERVER['SERVER_SOFTWARE'],
	'arch'		=> (PHP_INT_SIZE*8) . '-bit',
	'boot'		=> time(),
	'memory'	=> 0,
];




////////////////////////////////////////////////////////////////////////////////
// DO ALL THE ACTUAL THINGS!!!
////////////////////////////////////////////////////////////////////////////////
$list = explode("\n", `ps x -O vsz,etime | grep [n]ginx`);
foreach ($list as $item) {
	$item = explode(' ', trim(preg_replace('/(?:\s\s+|\t)/', ' ', $item)));
	if (empty($item)  ||  count($item)<3) continue;

	$boot = time() - parse_etime($item[2]);
	$output['boot'] = min($output['boot'], $boot);

	$output['memory'] += ($item[1] * 1024);
}




////////////////////////////////////////////////////////////////////////////////
// OUTPUT CONTENT AS A JSON DOCUMENT
////////////////////////////////////////////////////////////////////////////////
echo json_encode($output) . "\n";
